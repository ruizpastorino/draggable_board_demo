{"version":3,"sources":["components/tasks/task.js","components/utilities/modal.js","components/tasks/new-task.js","components/boards/board.js","components/boards/new-board.js","simulated-data/@fake-boards.js","components/utilities/pop-up.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","remove","edit","onDragStart","onDragEnter","dragging","useState","display","setDisplay","title","detail","id","draggable","className","onClick","Modal","close","confirm","children","buttonDisabled","formRef","React","createRef","ref","target","current","replace","setTimeout","disabled","dataInit","NewTask","addTask","data","setData","setButtonDisabled","dataHandler","name","value","useEffect","type","maxLength","placeholder","onChange","rows","Board","boards","board","updateBoards","editBoard","params","setParams","dragGroup","color","tasks","newTask","setNewTask","editTask","setEditTask","dragNode","useRef","handleDragEnd","handleDragEnter","group","undefined","dgIdx","findIndex","e","dIdx","gIdx","tIdx","existInBoard","length","splice","style","backgroundColor","alignItems","map","idx","handleEdit","payload","addEventListener","handleDragStart","index","String","Math","random","split","colors","NewBoard","addBoard","colorRef","cIdx","selectedIndex","element","textTransform","boardID","taskID","fakeData","PopUp","message","time","windowRef","fontSize","marginBottom","justifyContent","minHeight","minWidth","maxWidth","App","setEditBoard","setBoards","newBoard","setNewBoard","popUpMsg","setPopUpMsg","lastBoard","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c87d8ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Task = ({ task, remove, edit, onDragStart, onDragEnter, dragging }) => {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  const { title, detail, id } = task;\r\n\r\n  return (\r\n    <div\r\n      onDragStart={onDragStart}\r\n      onDragEnter={onDragEnter}\r\n      draggable\r\n      className={`card ${dragging && dragging.id === id ? \"opacity-low\" : \"\"}`}\r\n    >\r\n      <div className=\"card-title\">\r\n        <div className=\"row\">\r\n          <h5 className={`flex-1 ${!display ? \"cut-text\" : \"\"}`}>{title}</h5>\r\n          {detail !== \"\" && (\r\n            <i\r\n              className={`fas fa-caret-${display ? \"up\" : \"down\"} card-icon`}\r\n              onClick={() => setDisplay(!display)}\r\n            />\r\n          )}\r\n          <i className=\"fas fa-edit card-icon\" onClick={edit} />\r\n          <i className=\"fas fa-times card-icon\" onClick={remove} />\r\n        </div>\r\n      </div>\r\n      {detail !== \"\" && display && (\r\n        <div className=\"card-body\">\r\n          <p>{detail}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","import React from \"react\";\r\n\r\nconst Modal = ({ close, confirm, title, children, buttonDisabled }) => {\r\n  const formRef = React.createRef();\r\n\r\n  const dismiss = () => {\r\n    let target = formRef.current;\r\n    target.className = target.className.replace(\"show-up\", \"show-down\");\r\n    setTimeout(() => {\r\n      close();\r\n    }, 200);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-outside\">\r\n      <div ref={formRef} className=\"modal-window show-up\">\r\n        <div className=\"row\">\r\n          <h3 className=\"flex-1\">{title}</h3>\r\n          <i className=\"fas fa-times\" onClick={dismiss} />\r\n        </div>\r\n        {children}\r\n        <button\r\n          className={buttonDisabled ? \"\" : \"active-button\"}\r\n          disabled={buttonDisabled}\r\n          onClick={confirm}\r\n        >\r\n          Confirmar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../utilities/modal\";\r\n\r\nconst NewTask = ({ close, addTask, edit }) => {\r\n  const [data, setData] = useState(dataInit);\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  const dataHandler = ({ target }) => {\r\n    if (buttonDisabled) {\r\n      setButtonDisabled(false);\r\n    }\r\n    setData({ ...data, [target.name]: target.value});\r\n  };\r\n\r\n  const handleNewTask = () => {\r\n    if (data.title !== \"\") {\r\n      setData(dataInit);\r\n      addTask(data);\r\n      close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      setData(edit);\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal title=\"Nueva Tarea\" close={close} confirm={handleNewTask} buttonDisabled={buttonDisabled}>\r\n        <div>\r\n          <div className=\"input-container\">\r\n            <label>Titulo</label>\r\n            <input name=\"title\" value={data.title} type=\"text\" maxLength={100} placeholder=\"Titulo o nombre\" onChange={dataHandler} />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Detalle</label>\r\n            <textarea\r\n              name=\"detail\"\r\n              value={data.detail}\r\n              maxLength={250}\r\n              rows=\"3\"\r\n              onChange={dataHandler}\r\n              placeholder=\"Describa la tarea (maximo 250 caracteres)\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst dataInit = { title: \"\", detail: \"\" };\r\n\r\nexport default NewTask;\r\n","import React, { useRef, useState } from \"react\";\r\nimport Task from \"../tasks/task\";\r\nimport NewTask from \"../tasks/new-task\";\r\n\r\nconst Board = ({ boards, board, updateBoards, remove, edit: editBoard, params, setParams }) => {\r\n  const { dragging, dragGroup } = params;\r\n  let { title, color, tasks } = board;\r\n\r\n  const [newTask, setNewTask] = useState(false);\r\n  const [editTask, setEditTask] = useState(false);\r\n\r\n  const dragNode = useRef(null);\r\n\r\n  const addTask = (data) => {\r\n    if (editTask) {\r\n      let index = tasks.findIndex((e) => e.id === editTask.id);\r\n      tasks[index] = data;\r\n    } else {\r\n      data.id = String(Math.random()).split(\".\")[1];\r\n      board.tasks = [...tasks, data];\r\n    }\r\n    updateBoards(editTask ? \"Modificada Tarea\" : \"Creada una nueva Tarea\");\r\n  };\r\n\r\n  const handleDragStart = (e, payload) => {\r\n    dragNode.current = e.target;\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    setParams({ dragging: payload, dragGroup: board.id });\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    dragNode.current = null;\r\n    setParams({});\r\n  };\r\n\r\n  const handleDragEnter = (group, task) => {\r\n    if (dragging !== undefined) {\r\n      const dgIdx = boards.findIndex((e) => e.id === dragGroup);\r\n      const dIdx = boards[dgIdx].tasks.findIndex((e) => e.id === dragging.id);\r\n      const gIdx = boards.findIndex((e) => e.id === group.id);\r\n      const tIdx = group.tasks.findIndex((e) => e.id === task.id);\r\n\r\n      const existInBoard = boards[gIdx].tasks.findIndex((e) => e.id === dragging.id);\r\n\r\n      if (existInBoard !== -1) {\r\n        boards[gIdx].tasks[tIdx] = dragging;\r\n        boards[gIdx].tasks[dIdx] = task;\r\n      } else if (existInBoard === -1 || !boards[gIdx].tasks.length) {\r\n        boards[dgIdx].tasks.splice(dIdx, 1);\r\n        boards[gIdx].tasks.splice(tIdx, 0, dragging);\r\n\r\n        setParams({ dragging: dragging, dragGroup: group.id });\r\n      }\r\n\r\n      updateBoards();\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setEditTask(task);\r\n    setNewTask(true);\r\n  };\r\n\r\n  return (\r\n    <div draggable className=\"board-container\" onDragEnter={dragging && !board.tasks.length ? () => handleDragEnter(board, dragging) : null}>\r\n      <div style={{ backgroundColor: color }} className=\"board-title\">\r\n        <div style={{ alignItems: \"center\" }} className=\"row\">\r\n          <h4 className=\"flex-1\">\r\n            {title} ({board.tasks.length})\r\n          </h4>\r\n          <i className=\"fas fa-plus-circle\" onClick={() => setNewTask(true)} />\r\n          <i className=\"fas fa-edit\" onClick={() => editBoard(board)} />\r\n          <i className=\"fas fa-times\" onClick={remove} />\r\n        </div>\r\n      </div>\r\n      <div className=\"board-tasks-area\">\r\n        {tasks.length ? (\r\n          tasks.map((task, idx) => (\r\n            <Task\r\n              dragging={dragging}\r\n              key={idx}\r\n              task={task}\r\n              remove={() => {\r\n                tasks.splice(idx, 1);\r\n                updateBoards(\"Tarea Eliminada\");\r\n              }}\r\n              edit={() => handleEdit(task)}\r\n              onDragStart={(e) => handleDragStart(e, task)}\r\n              onDragEnter={() => handleDragEnter(board, task)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"empty\">\r\n            <i className=\"fas fa-file\" />\r\n            <h4>Sin tareas</h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {newTask && (\r\n        <NewTask\r\n          close={() => {\r\n            setEditTask(false);\r\n            setNewTask(false);\r\n          }}\r\n          addTask={addTask}\r\n          edit={editTask}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../utilities/modal\";\r\n\r\nconst NewBoard = ({ close, addBoard, edit }) => {\r\n  const [data, setData] = useState(dataInit);\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  const dataHandler = ({ target }) => {\r\n    if (buttonDisabled) {\r\n      setButtonDisabled(false);\r\n    }\r\n    setData({ ...data, [target.name]: target.value });\r\n  };\r\n\r\n  const colorRef = React.createRef();\r\n\r\n  const handleNewBoard = () => {\r\n    if (data.title !== \"\") {\r\n      addBoard(data);\r\n      setData(dataInit);\r\n      close();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (edit) {\r\n      setData(edit);\r\n      const cIdx = colors.findIndex((e) => e.color === edit.color);\r\n      colorRef.current.selectedIndex = cIdx;\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <Modal title=\"Nuevo Tablero\" close={close} confirm={handleNewBoard} buttonDisabled={buttonDisabled}>\r\n      <div className=\"input-container\">\r\n        <label>Titulo de Tablero</label>\r\n        <input name=\"title\" value={data.title} type=\"text\" placeholder=\"Ej. Tareas pendientes\" onChange={dataHandler} />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <label>Color distintivo</label>\r\n        <select ref={colorRef} name=\"color\" value={data.color} onChange={dataHandler}>\r\n          {colors.map((element) => (\r\n            <option key={element.title} style={{ backgroundColor: element.color, textTransform: \"capitalize\" }} value={element.color}>\r\n              {element.title}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst colors = [\r\n  { title: \"Cold\", color: \"#387c73\" },\r\n  { title: \"warm\", color: \"orange\" },\r\n  { title: \"confort\", color: \"#60ad32\" },\r\n  { title: \"Hot\", color: \"tomato\" },\r\n  { title: \"Neutro\", color: \"#606060\" },\r\n];\r\n\r\nconst dataInit = {\r\n  title: \"\",\r\n  color: \"#387c73\",\r\n  tasks: [],\r\n};\r\n\r\nexport default NewBoard;\r\n","let boardID = 0;\r\nlet taskID = 0;\r\nexport const fakeData = [\r\n  {\r\n    id: boardID++,\r\n    color: \"tomato\",\r\n    title: \"Waiting to do\",\r\n    tasks: [\r\n      {\r\n        id: taskID++,\r\n        title: \"Crear usuarios\",\r\n        detail: \"Definir esquema de usuarios\",\r\n      },\r\n      {\r\n        id: taskID++,\r\n        title: \"Agregar avatar de usario a las cards\" ,\r\n        detail: \"Utilizar una foto de perfil pequeña circular\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: boardID++,\r\n    color: \"orange\",\r\n    title: \"Doing Now\",\r\n    tasks: [\r\n      {\r\n        id: taskID++,\r\n        title: \"Crear funcionamientos de cards\",\r\n        detail: \"Desarrollar la logica para el traslado de las tarjetas\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: boardID++,\r\n    color: \"#60ad32\",\r\n    title: \"Done it\",\r\n    tasks: [],\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nconst PopUp = ({ message, close, time }) => {\r\n  const windowRef = React.createRef();\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      let target = windowRef.current;\r\n      target.className = target.className.replace(\"show-up\", \"show-down\");\r\n    }, time);\r\n    setTimeout(() => {\r\n      close();\r\n    }, time + 200);\r\n  }, [close]);\r\n\r\n  return (\r\n    <div className=\"modal-outside\">\r\n      <div ref={windowRef} style={style} className=\"modal-window center-all show-up\">\r\n        <i\r\n          style={{ fontSize: \"40px\", marginBottom: \"10px\", color: \"orange\" }}\r\n          className=\"fas fa-check\"\r\n        />\r\n        <h3>{message}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopUp;\r\n\r\nconst style = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  minHeight: \"150px\",\r\n  minWidth: \"400px\",\r\n  maxWidth: \"600px\",\r\n};\r\n","import React ,{ useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Board from \"./components/boards/board\";\r\nimport NewBoard from \"./components/boards/new-board\";\r\nimport { fakeData } from \"./simulated-data/@fake-boards\";\r\nimport \"./icons/css/all.css\";\r\nimport PopUp from \"./components/utilities/pop-up\";\r\n\r\nconst App = () => {\r\n  const [editBoard, setEditBoard] = useState(false);\r\n  const [boards, setBoards] = useState([...fakeData]);\r\n  const [newBoard, setNewBoard] = useState(false);\r\n  const [popUpMsg, setPopUpMsg] = useState(false);\r\n  const [params, setParams] = useState(false);\r\n\r\n  const updateBoards = (message) => {\r\n    setBoards([...boards]);\r\n    if (message) {\r\n      setPopUpMsg(message);\r\n    }\r\n  };\r\n\r\n  const addNewBoard = (data) => {\r\n    if (editBoard) {\r\n      let index = boards.findIndex((e) => e.id === editBoard.id);\r\n      boards[index] = data;\r\n    } else {\r\n      const lastBoard = boards[boards.length - 1];\r\n      data.id = lastBoard !== undefined ? lastBoard.id + 1 : 0;\r\n      boards.push(data);\r\n    }\r\n    updateBoards(editBoard ? \"Se Modifico Tablero\" : \"Creado un nuevo tablero\");\r\n  };\r\n\r\n\r\n  const edit = (board) => {\r\n    setEditBoard(board);\r\n    setNewBoard(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {newBoard && (\r\n        <NewBoard\r\n          close={() => {\r\n            setEditBoard(false);\r\n            setNewBoard(false);\r\n          }}\r\n          edit={editBoard}\r\n          addBoard={addNewBoard}\r\n        />\r\n      )}\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h3 className=\"flex-1\">Tableros Activos</h3>\r\n          <i style={{ color: \"orange\", fontSize: \"20px\" }} className=\"fas fa-plus-circle\" onClick={() => setNewBoard(true)} />\r\n        </div>\r\n        <div className=\"boards-container\">\r\n          {boards.length ? (\r\n            boards.map((board, idx) => (\r\n              <Board\r\n                key={idx}\r\n                {...{\r\n                  boards,\r\n                  board,\r\n                  params,\r\n                  setParams,\r\n                  updateBoards,\r\n                  edit,\r\n                  remove: () => {\r\n                    boards.splice(idx, 1);\r\n                    updateBoards(\"Tablero Eliminado\");\r\n                  },\r\n                }}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div style={{ backgroundColor: \"#505050\" }} className=\"empty\">\r\n              <i style={{ fontSize: \"100px\", marginBottom: \"50px\" }} className=\"fas fa-chalkboard\" />\r\n              <h2>Crear Tablero para comenzar</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {popUpMsg && <PopUp message={popUpMsg} close={() => setPopUpMsg(false)} time={750} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}